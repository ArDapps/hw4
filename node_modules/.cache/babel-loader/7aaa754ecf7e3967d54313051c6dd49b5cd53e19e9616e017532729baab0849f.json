{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst DataHandling = theUrl => {\n  _s();\n  const [posts, setpost] = useState(null);\n  const [connServerError, setconnServerError] = useState(null);\n  const [isWaitingData, setisWaitingData] = useState(true);\n  useEffect(() => {\n    //console.log('useEffect is running!')\n    //console.log(posts)\n    fetch(theUrl).then(theResp => {\n      if (!theResp.ok) {\n        throw Error('Can not reach the data server!!!!');\n      }\n      return theResp.json();\n    }).then(data => {\n      console.log(data);\n      {/* for changing the usestate of post */}\n      setpost(data);\n      {/* for hide the loading data text */}\n      setisWaitingData(false);\n    }).catch(theErr => {\n      console.log(theErr.message);\n      setconnServerError(theErr.message);\n      setisWaitingData(false);\n    });\n  }, [theUrl]);\n  return {\n    isWaitingData,\n    connServerError,\n    posts\n  };\n};\n_s(DataHandling, \"6P0c9J/EzI8pjVHs29b9F6cviIs=\");\n_c = DataHandling;\nexport default DataHandling;\nvar _c;\n$RefreshReg$(_c, \"DataHandling\");","map":{"version":3,"names":["useEffect","useState","DataHandling","theUrl","_s","posts","setpost","connServerError","setconnServerError","isWaitingData","setisWaitingData","fetch","then","theResp","ok","Error","json","data","console","log","catch","theErr","message","_c","$RefreshReg$"],"sources":["/Users/mrbebo/Documents/Github/hw4/src/DataHandling.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\r\n\r\nconst DataHandling = (theUrl)=>{\r\n\r\n    const [posts,setpost]=useState(null);\r\n    const [connServerError,setconnServerError]=useState(null);\r\n    const [isWaitingData,setisWaitingData]=useState(true);\r\n\r\n    useEffect(()=>{\r\n        //console.log('useEffect is running!')\r\n        //console.log(posts)\r\n        fetch(theUrl)\r\n        .then(theResp=>{\r\n            if (!theResp.ok) {\r\n                throw Error ('Can not reach the data server!!!!');\r\n            }\r\n            return theResp.json();\r\n       })\r\n        .then (data=>{\r\n            console.log(data);\r\n            \r\n            {/* for changing the usestate of post */}\r\n            setpost(data);\r\n\r\n            {/* for hide the loading data text */}\r\n            setisWaitingData(false);\r\n        }).catch(theErr=>{\r\n            console.log(theErr.message);\r\n            setconnServerError(theErr.message);\r\n            setisWaitingData(false);\r\n        })\r\n    },[theUrl]);\r\n\r\n    return {isWaitingData,connServerError,posts};\r\n}\r\n\r\nexport default DataHandling;"],"mappings":";AAAA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAE1C,MAAMC,YAAY,GAAIC,MAAM,IAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,KAAK,EAACC,OAAO,CAAC,GAACL,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACM,eAAe,EAACC,kBAAkB,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EACzD,MAAM,CAACQ,aAAa,EAACC,gBAAgB,CAAC,GAACT,QAAQ,CAAC,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAI;IACV;IACA;IACAW,KAAK,CAACR,MAAM,CAAC,CACZS,IAAI,CAACC,OAAO,IAAE;MACX,IAAI,CAACA,OAAO,CAACC,EAAE,EAAE;QACb,MAAMC,KAAK,CAAE,mCAAmC,CAAC;MACrD;MACA,OAAOF,OAAO,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACAJ,IAAI,CAAEK,IAAI,IAAE;MACTC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,CAAC;MACDX,OAAO,CAACW,IAAI,CAAC;MAEb,CAAC;MACDP,gBAAgB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,CAACU,KAAK,CAACC,MAAM,IAAE;MACbH,OAAO,CAACC,GAAG,CAACE,MAAM,CAACC,OAAO,CAAC;MAC3Bd,kBAAkB,CAACa,MAAM,CAACC,OAAO,CAAC;MAClCZ,gBAAgB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,EAAC,CAACP,MAAM,CAAC,CAAC;EAEX,OAAO;IAACM,aAAa;IAACF,eAAe;IAACF;EAAK,CAAC;AAChD,CAAC;AAAAD,EAAA,CAhCKF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}